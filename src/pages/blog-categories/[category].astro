---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import Breadcrumb from "../../components/Breadcrumb.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  allPosts.sort((x, y) => (Date.parse(y.data.date)) - (Date.parse(x.data.date)));
  const uniqueCategories = [
    ...new Set(allPosts.map((post) => post.data.categories).flat()),
  ];

  const uniqueCategoriesWithoutUndefined = uniqueCategories.filter(
    (category: any) => category !== undefined,
  );

  return uniqueCategoriesWithoutUndefined.map((category: any) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.categories?.includes(category),
    );
    return {
      params: { category },
      props: { posts: filteredPosts },
    };
  });
  
}

const { category } = Astro.params;
const { posts } = Astro.props;
---

<Layout title=`Category:${category}`>
	<Breadcrumb lists={[{ name: "Categories", path: "blog-categories" }, {name: category}]} />
  <h1>カテゴリー: {category}</h1>
  <main>
    {
      posts.map((post) => {
        return (
          <article>
            <header>
              <span class="posted-on">{post.data.date}に投稿</span>
              <h2 class="entry-title">
                <a href={`/blog/${post.slug}`}>{post.data.title}</a>
              </h2>
            </header>
          </article>
        );
      })
    }
  </main>
</Layout>