---
import Layout from "../../layouts/Layout.astro";
import Breadcrumb from "../../components/Breadcrumb.astro";
import TagCategoryBlock from "../../components/TagCategoryBlock.astro";
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import PaginationList from "../../components/PagenationList.svelte";
// import Twitter from "../../components/Twitter.astro";

export const postsPerPage = 15;
export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getCollection("blog");
  allPosts.sort((x, y) => (Date.parse(y.data.date)) - (Date.parse(x.data.date)));
  return paginate(allPosts, { pageSize: postsPerPage });
}

const { page } = Astro.props;
---

<Layout title="Blogs">
  <Breadcrumb lists={[{ name: "Blogs" }]} />
  <main>
    {
      page.data.map((post, i) => {
        let excerpt = post.rendered?.html.split("<!--more-->")[0]
        return (
          <article class="post">
            <header>
              <span class="posted-on">{post.data.date}</span>
              <h2 class="entry-title">
                <a href={`/blog/${post.slug}`}>{post.data.title}</a>
              </h2>
            </header>
            <div
              class="entry-content"
              set:html={excerpt}
            />
            {() => {
              if (post.rendered?.html.includes("<!--more-->")) {
                return (
                  <p>
                    <a href={`/blog/${post.slug}`}>続きを読む</a>
                  </p>
                );
              }
            }}
          	<TagCategoryBlock data={[{tags: post.data.tags, categories: post.data.categories, type: 'blog'}, {name: post.data.title}]} ></TagCategoryBlock>
          </article>
        );
      })
    }
  </main>
  <PaginationList {page} />
</Layout>
