---
import Layout from "../../layouts/Layout.astro";
import Breadcrumb from "../../components/Breadcrumb.astro";
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";
import PaginationList from "../../components/PagenationList.svelte";

export const postsPerPage = 15;
export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const allPosts = await getCollection("product");
    allPosts.sort((x, y) => Date.parse(y.data.date) - Date.parse(x.data.date));
    return paginate(allPosts, { pageSize: postsPerPage });
}

const { page } = Astro.props;
---

<Layout title="Products">
    <Breadcrumb lists={[{ name: "Products" }]} />
    <main>
        {
            page.data.map((post) => {
                return (
                    <article class="product-container">
                        <a href={`/product/${post.slug}`}>
                            <img
                                class="product-thumbnail"
                                src={post.data.thumbnail}
                                alt=""
                            />
                            <div class="product-data">
                                <div>
                                    <span class="product-posted-on">
                                        {post.data.date}
                                    </span>
                                    <h2 class="product-title">
                                        {post.data.title}
                                    </h2>
                                    <p class="description">{post.data.description}</p>
                                    {() => {
                                        if (post.data.tags == undefined) {
                                            return (
                                                <p class="product-category-tag">
                                                    カテゴリー :{" "}
                                                    {post.data.categories}
                                                </p>
                                            );
                                        } else {
                                            return (
                                                <p class="product-category-tag">
                                                    カテゴリー :{" "}
                                                    {post.data.categories} |
                                                    タグ : {post.data.tags}
                                                </p>
                                            );
                                        }
                                    }}
                                </div>
                            </div>
                        </a>
                    </article>
                );
            })
        }
    </main>
    <PaginationList {page} />
</Layout>
